@model Models.User

@{
	string title = "Create";

	ViewBag.Title = title;
}

<h2>@title</h2>



@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">

		@if (Infrastructure.Utility.AuthenticatedUser != null)
		{

			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.RoleId, "RoleId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-sm-9">
					@Html.DropDownList("RoleId", (SelectList)ViewBag.RoleId, "Select an item...", htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-sm-9">
					@Html.EditorFor(model => model.IsActive)
					@Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
				</div>
			</div>
		}
		<div class="form-group">
			@Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @Value = string.Empty } })
				@Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @Value = string.Empty } })
				@Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @Value = string.Empty } })
				@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @Value = string.Empty } })
				@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @Value = string.Empty } })
				@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-sm-9 col-sm-offset-2">
				<button type="submit" class="btn btn-primary">Create</button>
				<button type="reset" class="btn btn-default">Reset</button>
			</div>
		</div>
	</div>

}

<div class="row">
	<div class="col-xs-12">
		@if (Infrastructure.Utility.AuthenticatedUser != null)
		{
			@Html.ActionLink("Back to List", MVC.Users.Index())
		}
		else
		{
			@Html.ActionLink("Back to Login", MVC.Login.Index())
		}

	</div>
</div>